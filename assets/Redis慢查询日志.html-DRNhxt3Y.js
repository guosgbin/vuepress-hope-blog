import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as n,o as a}from"./app-BJPl3VMZ.js";const l={};function t(r,s){return a(),i("div",null,s[0]||(s[0]=[n(`<table><thead><tr><th>版本</th><th>内容</th><th>时间</th></tr></thead><tbody><tr><td>V1</td><td>新增</td><td>2023年04月09日22:36:04</td></tr></tbody></table><p>本文参考：</p><ul><li><a href="http://redisbook.com/preview/server/execute_command.html" target="_blank" rel="noopener noreferrer">http://redisbook.com/preview/server/execute_command.html</a></li><li><a href="https://blog.csdn.net/wwh578867817/article/details/123173543" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/wwh578867817/article/details/123173543</a></li></ul><h2 id="redis-执行一个命令的整个过程" tabindex="-1"><a class="header-anchor" href="#redis-执行一个命令的整个过程"><span>Redis 执行一个命令的整个过程</span></a></h2><blockquote><p><a href="http://redisbook.com/preview/server/execute_command.html" target="_blank" rel="noopener noreferrer">http://redisbook.com/preview/server/execute_command.html</a></p></blockquote><p>一个命令请求从发送到获得回复的过程大致如下：</p><ol><li><strong>发送命令请求</strong>：Redis 客户端将命令请求转换成协议格式，通过套接字发送给 Redis 服务器；</li><li><strong>读取命令请求</strong>：Redis 服务器读取来自 Redis 客户端的请求命令，并将其保存到客户端状态的输入缓冲区里面；</li><li><strong>解析命令参数</strong>：Redis 服务器将命令解析为命令名和参数，并在内部执行相应的处理逻辑；</li><li><strong>执行命令逻辑</strong>：Redis 服务器根据命令类型和具体的参数，在数据库中执行相应的操作；</li><li><strong>存储命令结果</strong>：Redis 服务器将命令执行后得到的结果存储在输出缓冲区中；</li><li><strong>发送命令结果</strong>：Redis 服务器从输出缓冲区中读取命令结果，并将其通过网络协议发送给客户端。</li></ol><blockquote><p>Redis 6 后的多线程部分只是用来处理网络数据的读写和协议解析，执行命令还是单线程的。但如果严格来讲从 Redis 4 之后并不是单线程，除了主线程外，它也有后台线程在处理一些较为缓慢的操作，例如清理脏数据、无用连接的释放、大 key 的删除等等。</p></blockquote><h2 id="慢查询的两个配置参数" tabindex="-1"><a class="header-anchor" href="#慢查询的两个配置参数"><span>慢查询的两个配置参数</span></a></h2><h3 id="慢查询的两个配置" tabindex="-1"><a class="header-anchor" href="#慢查询的两个配置"><span>慢查询的两个配置</span></a></h3><p>在 Redis 的配置文件中有下面两个配置项</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>slowlog-log-slower-than 10000</span></span>
<span class="line"><span>slowlog-max-len 128</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>slowlog-log-slower-than</strong>：表示 Redis 命令执行超过多长时间（微秒）才会被记录在慢查询日志中； <ul><li>如果配置中输入一个负数，则会禁用慢查询日志；</li><li>如果输入 0，则会记录每个命令的执行情况；</li></ul></li><li><strong>slowlog-max-len</strong>：表示慢查询日志的长度。当日志条数已经满了时，新的命令被记录时，最旧的记录将从队列中移除；</li></ul><h3 id="在线修改慢查询的两个配置" tabindex="-1"><a class="header-anchor" href="#在线修改慢查询的两个配置"><span>在线修改慢查询的两个配置</span></a></h3><p>这两个参数可以使用 <strong>CONFIG SET</strong> 命令在线修改</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>CONFIG SET parameter value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>先看一下之前的配置的值</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; config get *slow*</span></span>
<span class="line"><span>1) &quot;slowlog-max-len&quot;</span></span>
<span class="line"><span>2) &quot;128&quot;</span></span>
<span class="line"><span>3) &quot;slowlog-log-slower-than&quot;</span></span>
<span class="line"><span>4) &quot;10000&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在线修改</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; config set slowlog-log-slower-than 100</span></span>
<span class="line"><span>OK</span></span>
<span class="line"><span>127.0.0.1:6379&gt; config set slowlog-max-len 1024</span></span>
<span class="line"><span>OK</span></span>
<span class="line"><span>127.0.0.1:6379&gt;</span></span>
<span class="line"><span>127.0.0.1:6379&gt; config get *slow*</span></span>
<span class="line"><span>1) &quot;slowlog-max-len&quot;</span></span>
<span class="line"><span>2) &quot;1024&quot;</span></span>
<span class="line"><span>3) &quot;slowlog-log-slower-than&quot;</span></span>
<span class="line"><span>4) &quot;100&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用 <strong>CONFIG REWRITE</strong> 将配置持久化本地配置文件中</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; config rewrite</span></span>
<span class="line"><span>OK</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以去本地配置文件查看，确实是持久化到了本地配置文件中。</p><h2 id="查看慢查询日志" tabindex="-1"><a class="header-anchor" href="#查看慢查询日志"><span>查看慢查询日志</span></a></h2><p>慢查询日志是存放在 Redis 的内存列表中，我们需要通过命令来访问慢查询日志。</p><h3 id="slowlog-get-获取慢查询日志" tabindex="-1"><a class="header-anchor" href="#slowlog-get-获取慢查询日志"><span>SLOWLOG GET：获取慢查询日志</span></a></h3><blockquote><p><a href="https://redis.io/commands/slowlog-get/" target="_blank" rel="noopener noreferrer">https://redis.io/commands/slowlog-get/</a></p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>SLOWLOG GET [count]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认返回最近的 10 条慢查询日志。</p><p>可选的 count 参数限制返回条目的数量，因此该命令最多返回 count 个条目，特殊数字 -1 表示返回所有条目。</p><p>看个案例，为了看慢查询日志，我临时把 slowlog-log-slower-than 改成 1 了：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; slowlog get</span></span>
<span class="line"><span>1) 1) (integer) 4</span></span>
<span class="line"><span>   2) (integer) 1680796134</span></span>
<span class="line"><span>   3) (integer) 560</span></span>
<span class="line"><span>   4) 1) &quot;set&quot;</span></span>
<span class="line"><span>      2) &quot;name&quot;</span></span>
<span class="line"><span>      3) &quot;hello&quot;</span></span>
<span class="line"><span>   5) &quot;127.0.0.1:51612&quot;</span></span>
<span class="line"><span>   6) &quot;&quot;</span></span>
<span class="line"><span>2) 1) (integer) 3</span></span>
<span class="line"><span>   2) (integer) 1680796120</span></span>
<span class="line"><span>   3) (integer) 6027</span></span>
<span class="line"><span>   4) 1) &quot;config&quot;</span></span>
<span class="line"><span>      2) &quot;rewrite&quot;</span></span>
<span class="line"><span>   5) &quot;127.0.0.1:51612&quot;</span></span>
<span class="line"><span>   6) &quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>慢查询日志中的每个条目由下面 6 个值组成：</p><ol><li>慢查询日志的标识 ID（唯一性）；</li><li>记录日志的 Unix 时间戳；</li><li>命令耗时（微秒）；</li><li>执行命令和参数的数组；</li><li>客户端 IP 和端口（仅限 4.0 或更高版本）；</li><li>客户端名称（如果通过 CLIENT SETNAME 命令设置，仅限 4.0 或更高版本）；</li></ol><blockquote><p>Starting with Redis version 4.0.0: Added client IP address, port and name to the reply.</p></blockquote><h3 id="slowlog-len-获取慢查询日志列表的长度" tabindex="-1"><a class="header-anchor" href="#slowlog-len-获取慢查询日志列表的长度"><span>SLOWLOG LEN：获取慢查询日志列表的长度</span></a></h3><blockquote><p><a href="https://redis.io/commands/slowlog-len/" target="_blank" rel="noopener noreferrer">https://redis.io/commands/slowlog-len/</a></p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>SLOWLOG LEN</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>看个例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; slowlog len</span></span>
<span class="line"><span>(integer) 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>一旦慢查询日志列表的长度达到 slowlog-max-len 限制，每当创建新的慢查询日志时，都会删除最旧慢查询日志。可以使用 SLOWLOG RESET 命令清除慢查询日志。</p><h3 id="slowlog-reset-重置慢查询日志" tabindex="-1"><a class="header-anchor" href="#slowlog-reset-重置慢查询日志"><span>SLOWLOG RESET：重置慢查询日志</span></a></h3><blockquote><p><a href="https://redis.io/commands/slowlog-reset/" target="_blank" rel="noopener noreferrer">https://redis.io/commands/slowlog-reset/</a></p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>SLOWLOG RESET</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对慢查询日志列表做清空操作。一旦清空，永远无法找回。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>127.0.0.1:6379&gt; slowlog len</span></span>
<span class="line"><span>(integer) 9</span></span>
<span class="line"><span>127.0.0.1:6379&gt; slowlog reset</span></span>
<span class="line"><span>OK</span></span>
<span class="line"><span>127.0.0.1:6379&gt; slowlog len</span></span>
<span class="line"><span>(integer) 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运维实践" tabindex="-1"><a class="header-anchor" href="#运维实践"><span>运维实践</span></a></h2><p>需要注意的是，慢查询记录的是命令的执行时间，并不包括命令排队和网络传输的时间。所以客户端执行命令的时间会大于命令的实际执行时间。因为命令执行排队机制，慢查询会导致其它命令级联阻塞，因此当客户端出现请求超时时，需要检查该时间点是否有对应的慢查询，从而分析出是否是慢查询导致的命令级联阻塞。</p><ul><li><strong>slowlog-log-slower-than</strong>：默认值超过 10 毫秒就是慢查询，这个值需要根据 Redis 的并发量来调整该值。因为 Redis 的命令都是单线程执行的，对于高流量的场景，如果命令执行时间在 1 毫秒以上，那么 Redis 最多可支撑的 OPS 不到 1000。所以对于高 OPS 的场景的 Redis 建议给这个配置项设置为 1 毫秒；</li><li><strong>slowlog-max-len</strong>：线上建议调大慢查询查询列表，记录慢查询时 Redis 会对长命令做截断操作，并不会占用大量内存。线上可设置为 1000 以上。因为慢查询列表是一个长度有限制的 FIFO 的队列，所以可能会有记录丢失的情况，我们可以定时调用 SLOW GET 命令将慢查询日志持久化到其他存储中；</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>设置建议</th></tr></thead><tbody><tr><td>slowlog-log-slower-than</td><td>设置慢查询阈值，执行时间超过阈值后会被记录到慢日志。<br>单位为微秒（μs）。负数会禁用慢日志，而零值会强制记录每个命令。</td><td>不要设置过大，通常设置 1ms。</td></tr><tr><td>slowlog-max-len</td><td>设置慢日志的长度。当记录新命令并且慢速日志已达到其最大长度时，最旧的命令将从记录的命令队列中删除以腾出空间。</td><td>不要设置过小，通常设置 1000 左右。</td></tr></tbody></table>`,50)]))}const p=e(l,[["render",t]]),c=JSON.parse('{"path":"/Redis/Redis%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97.html","title":"Redis慢查询日志","lang":"en-US","frontmatter":{"title":"Redis慢查询日志","description":"本文参考： http://redisbook.com/preview/server/execute_command.html https://blog.csdn.net/wwh578867817/article/details/123173543 Redis 执行一个命令的整个过程 http://redisbook.com/preview/server...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/Redis/Redis%E6%85%A2%E6%9F%A5%E8%AF%A2%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:title","content":"Redis慢查询日志"}],["meta",{"property":"og:description","content":"本文参考： http://redisbook.com/preview/server/execute_command.html https://blog.csdn.net/wwh578867817/article/details/123173543 Redis 执行一个命令的整个过程 http://redisbook.com/preview/server..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-03T07:07:29.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-03T07:07:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis慢查询日志\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-03T07:07:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"git":{"createdTime":1743664049000,"updatedTime":1743664049000,"contributors":[{"name":"Dylan Kwok","username":"","email":"guosgbin@163.com","commits":1}]},"readingTime":{"minutes":5.43,"words":1629},"filePathRelative":"Redis/Redis慢查询日志.md","localizedDate":"April 3, 2025","autoDesc":true}');export{p as comp,c as data};
