import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as i,b as e,f as a,w as n,e as l,r as k,o as p}from"./app-Rs4pkfKX.js";const d="/assets/image-20230814192447652-2012289-n-2dCMrA.png",g="/assets/image-20230814193103437-2012664-BqyRc57Q.png",o="/assets/image-20230814192646360-2012407-CNmUc44a.png",y="/assets/image-20230813182828715-Bkt1LtC6.png",u="/assets/9ec48f68de4c0bf18f9300eebd8a34bc87338-DPfSVEfu.png",A="/assets/image-20230815192110089-Em6SxZh1.png",c="/assets/image-20230815175633682-DVTF91tY.png",m="/assets/image-20230815175647348-o4e2E5j3.png",B="/assets/image-20230814233858381-2027539-BhbM_f_g.png",f="/assets/image-20230814233919177-2027561-lfmbuxgu.png",b="/assets/image-20230815000610142-DrAEk8SQ.png",E={},C={class:"table-of-contents"};function x(F,s){const t=k("router-link");return p(),r("div",null,[i("nav",C,[i("ul",null,[i("li",null,[a(t,{to:"#背景和期望目标"},{default:n(()=>s[0]||(s[0]=[l("背景和期望目标")])),_:1})]),i("li",null,[a(t,{to:"#问题分析过程"},{default:n(()=>s[1]||(s[1]=[l("问题分析过程")])),_:1}),i("ul",null,[i("li",null,[a(t,{to:"#定位那些消息可以进行限流"},{default:n(()=>s[2]||(s[2]=[l("定位那些消息可以进行限流")])),_:1})]),i("li",null,[a(t,{to:"#定位限流指标-直播间人数"},{default:n(()=>s[3]||(s[3]=[l("定位限流指标（直播间人数）")])),_:1})]),i("li",null,[a(t,{to:"#消息流量占比-top4-以及限流它们的原因"},{default:n(()=>s[4]||(s[4]=[l("消息流量占比 TOP4 以及限流它们的原因")])),_:1})]),i("li",null,[a(t,{to:"#礼物消息占比"},{default:n(()=>s[5]||(s[5]=[l("礼物消息占比")])),_:1})]),i("li",null,[a(t,{to:"#某大主播直播间用户群体人数分布"},{default:n(()=>s[6]||(s[6]=[l("某大主播直播间用户群体人数分布")])),_:1})]),i("li",null,[a(t,{to:"#竞品现象"},{default:n(()=>s[7]||(s[7]=[l("竞品现象")])),_:1})])])]),i("li",null,[a(t,{to:"#方案设计"},{default:n(()=>s[8]||(s[8]=[l("方案设计")])),_:1}),i("ul",null,[i("li",null,[a(t,{to:"#消息体积精简策略"},{default:n(()=>s[9]||(s[9]=[l("消息体积精简策略")])),_:1})]),i("li",null,[a(t,{to:"#消息上行限流策略"},{default:n(()=>s[10]||(s[10]=[l("消息上行限流策略")])),_:1})]),i("li",null,[a(t,{to:"#消息下行限流策略"},{default:n(()=>s[11]||(s[11]=[l("消息下行限流策略")])),_:1})]),i("li",null,[a(t,{to:"#消息和上次下发数据比较"},{default:n(()=>s[12]||(s[12]=[l("消息和上次下发数据比较")])),_:1})]),i("li",null,[a(t,{to:"#消息-gzip-压缩"},{default:n(()=>s[13]||(s[13]=[l("消息 gzip 压缩")])),_:1})])])]),i("li",null,[a(t,{to:"#客户端做了什么"},{default:n(()=>s[14]||(s[14]=[l("客户端做了什么")])),_:1}),i("ul",null,[i("li",null,[a(t,{to:"#配合服务端做了什么"},{default:n(()=>s[15]||(s[15]=[l("配合服务端做了什么")])),_:1})]),i("li",null,[a(t,{to:"#用户退后台断连-im"},{default:n(()=>s[16]||(s[16]=[l("用户退后台断连 IM")])),_:1})])])]),i("li",null,[a(t,{to:"#下行限流策略上线灰度服务器效果分析"},{default:n(()=>s[17]||(s[17]=[l("下行限流策略上线灰度服务器效果分析")])),_:1})]),i("li",null,[a(t,{to:"#限流项目总结"},{default:n(()=>s[18]||(s[18]=[l("限流项目总结")])),_:1})])])]),s[19]||(s[19]=e('<h2 id="背景和期望目标" tabindex="-1"><a class="header-anchor" href="#背景和期望目标"><span>背景和期望目标</span></a></h2><p>随着直播间 DAU 上涨，现有的 IM 的公网流量费用高昂，公司运维成本明显提升。</p><p>目的是期望基于现有的 IM 功能，在不影响用户体验的前提下降低 IM 的公网流量费用。</p><blockquote><p>这次 IM 限流是服务端主导的优化，也就是我，产品和客户端配合服务端完成这个需求。</p></blockquote><h2 id="问题分析过程" tabindex="-1"><a class="header-anchor" href="#问题分析过程"><span>问题分析过程</span></a></h2><h3 id="定位那些消息可以进行限流" tabindex="-1"><a class="header-anchor" href="#定位那些消息可以进行限流"><span>定位那些消息可以进行限流</span></a></h3><p>主要是通过日志分析出各个业务消息的下发情况，针对每个消息有下面 3 个维度的考虑：</p><ol><li><strong>各个类型消息的下发次数排序统计；</strong></li><li><strong>各个类型消息的下发平均长度排序统计；</strong></li><li><strong>各个类型消息的总体消耗流量的统计；</strong></li></ol><p>上面是平台整体的一个统计信息，我们还<strong>按照上面的 3 个维度针对某个大主播（10w 人）做了统计</strong>，用来看下大直播间的的消息分布情况；</p><blockquote><p>数据统计来源是，我们有自己的数据统计的工具类，通过打印日志记录一个时间段内的平均值，然后通过日志采集到 Granfa 中进行图形化展示。</p></blockquote><p>通过上面就可以看到到一些<strong>下发频率高、平均长度长、消耗流量多</strong>的消息类型了，进而可以定位公网下行流量消耗高的那些消息类型了。</p><p>通过上面的统计数据，根据消息是否重要来制定不同的策略：</p><ol><li><strong>有些并不重要的消息就可以做限流处理</strong>，例如点赞消息、非付费用户的直播间进场消息，免费礼物消息等。</li><li><strong>对于那些用户花钱消费的消息就不能限流处理了</strong>，例如用户的付费送礼消息，特权用户的进场特效，直播间 C2C 消 息等；</li></ol><h3 id="定位限流指标-直播间人数" tabindex="-1"><a class="header-anchor" href="#定位限流指标-直播间人数"><span>定位限流指标（直播间人数）</span></a></h3><p>统计一段时间内，平台内直播间人数 TOP 100 的人数分布。</p><p>主要是获取主播开播时平均直播间人数的各个梯度，给直播间人数分层。比如 0 - 4000，4000 - 8000 等等。</p><h3 id="消息流量占比-top4-以及限流它们的原因" tabindex="-1"><a class="header-anchor" href="#消息流量占比-top4-以及限流它们的原因"><span>消息流量占比 TOP4 以及限流它们的原因</span></a></h3><p>2-14 号流量大盘情况（注: 岑先生开播了），Top4 类型消息占每天流量的 96%。那后续就针对以下 Top4 做限流；</p><img src="'+d+'" alt="image-20230814192447652" style="zoom:100%;"><p><strong>在大流量直播间针对这四个消息做限流的原因</strong></p><ul><li><strong>点赞消息</strong>：在大流量直播间，直播间热度不再需要点赞维持，与产品和运营同学确认，当直播间人数超过基准线后，点赞消息无意义，去掉点赞对用户体验影响较小。 ；</li><li><strong>弹幕消息</strong>：大流量直播间，弹幕刷屏速度非常快，基本是看不清的程度；限流后弹幕消息变少，反而能看清，用户体验更好；</li><li><strong>进场消息</strong>：客户端最短的进场动画 3s，以一场直播 3 个小时为例，最多能展示 3600 个进场动画。然而直播间已超过1W 人，肯定是不可能展示完的，所以需要做取舍，我们倾向优先展示贵族、特权、座驾等华丽进场效果；</li><li><strong>礼物消息</strong>：免费礼物（克拉之星，应援棒）占总礼物的 77%，对免费礼物做丢弃，可以大幅降低流量。同时减少免费礼物可以提高付费礼物的曝光，对流水有正向作用；</li></ul><h3 id="礼物消息占比" tabindex="-1"><a class="header-anchor" href="#礼物消息占比"><span>礼物消息占比</span></a></h3><p>免费礼物占比比较大。</p><img src="'+g+'" alt="image-20230814193103437" style="zoom:100%;"><h3 id="某大主播直播间用户群体人数分布" tabindex="-1"><a class="header-anchor" href="#某大主播直播间用户群体人数分布"><span>某大主播直播间用户群体人数分布</span></a></h3><p>分群策略原因：主要围绕不同身份用户关注其核心的价值：</p><ul><li>主播端主要还是让主播关注到人气，可以互动，可对违规用户操作，保持的是全量消息；</li><li>对金主层面就是要照顾其花钱的价值和感受，有面；花钱的用户是很关注自己的等级和状态的；</li><li>对普通用户可以在本已经看不清的情况下减少消息；</li></ul><img src="'+o+'" alt="image-20230814192646360" style="zoom:100%;"><h3 id="竞品现象" tabindex="-1"><a class="header-anchor" href="#竞品现象"><span>竞品现象</span></a></h3><p>其实当时看了下抖音直播，应该是也是针对某些消息在大流量的直播间做了限流；</p><table><thead><tr><th style="text-align:left;">竞品</th><th style="text-align:left;">功能</th><th style="text-align:left;">实测现象</th><th style="text-align:left;">预估结论</th></tr></thead><tbody><tr><td style="text-align:left;">抖音</td><td style="text-align:left;">弹幕区</td><td style="text-align:left;">两个用户发送的弹幕，有时可以看到，有时看不到<br>两个用户对比同一时间内的弹幕消息不一致</td><td style="text-align:left;">弹幕肯定分 uid 随机限流了</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">礼物区</td><td style="text-align:left;">小礼物气泡<br>流量大时两个用户展示不一致<br>流量小时两个用户展示一致</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">点赞</td><td style="text-align:left;">双人同一直播间测试正常：一个用户连续点赞，另一个用户观看隔几秒出几个点赞消息</td><td style="text-align:left;">点赞消息肯定限流了</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">进场</td><td style="text-align:left;">双人同一直播间测试正常：两个用户进入同一直播间播放的进场消息不一致<br>断网测试：进入直播间一段时间后，打开飞行模式进场消息仍旧播放</td><td style="text-align:left;">进场消息应该限流了，进场消息有队列处理</td></tr></tbody></table><h2 id="方案设计" tabindex="-1"><a class="header-anchor" href="#方案设计"><span>方案设计</span></a></h2><p>在和产品和运营的同学讨论后，使用下面几个策略降低 IM 的费用：</p><ol><li><strong>消息限流策略</strong>： <ol><li><strong>消息上行限流</strong>：按照不同的消息类型配置不同的限频策略，使用的是滑动窗口的方式来实现简单的上行限流；</li><li><strong>消息下行限流</strong>：当直播间人数超过某些阈值之后，对点赞、进场、弹幕、免费礼物特效等消息根据 uid 随机限流；</li></ol></li><li><strong>消息体精简策略</strong>： <ol><li><strong>删除废弃字段或者删除根本就没有使用过的字段</strong>，降低单个消息包的大小；</li><li><strong>消息中的某个字段名长度减少</strong>，例如 nickname 改为 n，和客户端约定好；</li><li><strong>消息中的某个字段的值的长度减少</strong>，例如图片域名客户端自己拼接；</li></ol></li><li><strong>消息中的字段的值和上一次下发的字段值比较后再下发</strong>； <ol><li>对于某些消息，比如直播间的一些统计信息的下发，如果某次下发时的一些统计数据和上次一样，就不用再次下发该字段了。如果全部一样，那么这整条消息都不用下推了；</li></ol></li></ol><h3 id="消息体积精简策略" tabindex="-1"><a class="header-anchor" href="#消息体积精简策略"><span>消息体积精简策略</span></a></h3><p>对于消息体积精简策略来说，需要产品和运营同学来确认是否可以接受效果，需要客户端同学出人力来配合实现版本控制。</p><p>例如：某些场景下给下发的消息的某些字段的长度缩小，则需要客户端同学来配合解析了，这也是需要版本控制的。</p><table><thead><tr><th style="text-align:left;">app</th><th style="text-align:left;">版本号</th><th style="text-align:left;">版本号</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">直播</td><td style="text-align:left;">&lt;=5.9.71</td><td style="text-align:left;">&gt;5.9.71</td><td style="text-align:left;">占比</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">28186</td><td style="text-align:left;">145827</td><td style="text-align:left;">83.8%</td></tr><tr><td style="text-align:left;">广播剧</td><td style="text-align:left;">&lt;=1.3.31</td><td style="text-align:left;">&gt;1.3.31</td><td style="text-align:left;">占比</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">13896</td><td style="text-align:left;">847910</td><td style="text-align:left;">98.38%</td></tr></tbody></table><blockquote><p>如果是针对某些字段直接删除，如果有影响展示的，则需要产品和运营的同学接受才能做下去。</p></blockquote><p>下面就是具体实施的消息精简策略：</p><ul><li><strong>图片域名拼接</strong>：有些消息中带有图片信息，之前是直接将域名拼接好后发送给客户端，现在将域名拼接延迟到客户端，让客户端自己去做域名拼接；<strong>（版本控制、铺版本）</strong><ul><li>通过多天的统计发现，让客户端自己去拼接图片域名后可以节约流量约 6%；</li><li>新版本从发送端去掉头像中的域名，仅发送&quot;a&quot;:&quot;3339312656410.png&quot;，客户端升 IM 基础字段中的 &quot;v&quot; 版本号；</li><li>若版本号为新的版本，则将&quot;a&quot;字段，按照规则拼接：域名+&quot;a&quot;字段+头像更新时间戳，当做图片地址使用；</li><li>若版本号为老的版本，则将&quot;a&quot;字段按照全量的图片地址进行使用；</li></ul></li><li><strong>删除多余字段</strong>： <ul><li>有些消息在用户的贵族身份的下需要带上一些字段，普通身份的用户不需要这些字段，这时就考虑删除这些多余的字段了；</li><li>还有些字段，客户端可能根本就没有使用过，这时就可以无顾虑的删除了；</li></ul></li><li><strong>跳转用的数据通过接口获取</strong>：某些具有跳转功能的消息，目前是跳转所需的所有数据直接在消息体内返回了，可以在跳转的瞬间通过调接口的方式获取额外需要的数据；<strong>（版本控制、铺版本）</strong><ul><li>例如：大礼物的全站飘屏消息，服务器端仅下发飘屏使用字段，礼物结构和送礼信息等用户点击跳转直播间时通过接口获取；</li></ul></li><li><strong>消息字段长度压缩</strong>：例如 nickname 字段，可以简化为 nn；<strong>（版本控制、铺版本）</strong></li></ul><h3 id="消息上行限流策略" tabindex="-1"><a class="header-anchor" href="#消息上行限流策略"><span>消息上行限流策略</span></a></h3><p><strong>背景</strong>：由于之前消息的上行限流只是简单的给消息类型分为可熔断和不可熔断的两种。随着消息类型的不断增多，分为限流和不限流两种策略就不够细化，此次针对不同的消息类型设置不同的上行限流比例。好处就是能够灵活的控制单个消息的限流频率；</p><p><strong>上行限流方案</strong>：使用『 <strong>lua 脚本 + 本地缓存</strong>』的设计思路，提前将 lua 脚本加载 sript load 加载到 redis 中返回一个 sha。</p><p><strong>方案具体实现</strong>：</p><ul><li>上行限流是<strong>房间和消息类型两个维度结合起来的</strong>；</li><li>上行限流<strong>使用 Redis 和本地缓存实现一个简单的滑动窗口的限流</strong>，比如某个房间某个消息类型在一秒中最多允许发送 100 条消息。</li></ul><img src="'+y+`" alt="image-20230813182828715" style="zoom:100%;"><p>脚本如下：</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 限流的 key，对应业务的消息类型</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rate_limit_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KEYS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 限流时间，单位为秒，为0表示不限制</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rate_limit_period</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KEYS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">-- 限流时间内可以推送的最大的上行消息数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rate_limit_max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">KEYS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> current_old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> current_old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> and (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">tonumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">current_old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) &gt;= </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">tonumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 说明已经到了时间窗口内的最大上行消息数了，需要返回 pttl 时间给业务程序</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 业务程序</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> p_ttl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pttl&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;0,&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.. </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">tostring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p_ttl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> current</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;incr&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> tonumber</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    -- 第一次调用 incr 时，给限流 key 设置过期时间，其实这个就是限流的时间窗口</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">call</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pexpire&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rate_limit_period</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;1&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>首先我们的限流的 key 是有过期时间的，<strong>1 秒钟</strong>。</li><li>限流 key 的组成部分有<strong>房间 id 和 业务消息类型</strong>；</li><li>redis 的 lua 脚本的基本思路是： <ul><li>先调用 get 命令<strong>获取当前房间的当前消息类型的限流次数</strong>。如果超过了限流次数，就表示当前时间窗口已经到达了允许的最大上行消息数了，需要<strong>返回限制消息发送的标志和 PTTL 时间给业务程序</strong>；如果没有超过限流次数，就<strong>将 redis 中的限流次数加 1</strong>；</li><li>前面说了，超过限流次数就返回限流标记和该 redis key 的 PTTL 时间，将这个 key 和 PTTL 时间存到本地缓存中去，后续<strong>当前房间同样的消息就可以通过本地缓存来判断是否需要限制发消息</strong>；</li><li>本地缓存存的是 key 和其对应解除限制的时间，也就是 <strong>PTTL + 当前时间 now</strong>；</li></ul></li></ul><p><strong>lua 是怎么使用的：</strong></p><ul><li><p>在静态代码块中读取 lua 脚本的代码到 String 的常量；</p></li><li><p>在 Spring 容器初始化完成时使用 @PostConstruct 注解将脚本通过 <code>SCRIPT LOAD script</code> 命令加载到 redis 上，程序保存返回 sha。</p></li><li><p>使用 <code>EVALSHA sha1 numkeys [key [key ...]] [arg [arg ...]]</code> 执行 lua 脚本。</p></li></ul><p><strong>lua 脚本使用的注意事项</strong></p><blockquote><p><strong>需要注意的是</strong>：如果执行 lua 的时候异常了，会返回 NOSCRIPT No matching script. Please use EVAL. 这时候需要将 lua 脚本重新 script load 到 redis 上。所以说需要有重试机制和 try catch 防止 lua 执行失败。</p><p>不过一般情况下，大多数 Redis 的客户端都实现了自动实现了重试机制。</p><p><strong>原因</strong>是 Redis 并不会把这些 lua 脚本持久化，这些脚本的缓存会在服务器重启时清除，也可能会通过显式调用 SCRIPT FLUSH 来清除，这就意味着缓存的脚本可能会随时丢失。</p></blockquote><h3 id="消息下行限流策略" tabindex="-1"><a class="header-anchor" href="#消息下行限流策略"><span>消息下行限流策略</span></a></h3><p><strong>用户限流分组</strong>：核心目的就是保证主播、房管和付费贵族会员用户的权益。</p><ul><li><strong>不限流分组</strong>：主播、房管、贵族用户；</li><li><strong>限流分组</strong>：普通用户，访客用户；</li></ul><blockquote><p>注意：虽然是分了不限流和限流分组，但是代码层面可以实现无限个分组，可随意扩展。</p></blockquote><p><strong>限流维度：</strong></p><ul><li>某个房间的人数；</li><li>房间内的消息类型；</li></ul><p>例如消息类型为 100 的消息在房间人数为 5k 的时候，随机给房间内的 80% 的观众推消息，在人数为 10k 的时候，随机给房间内的 50 % 的观众推消息。</p><p><strong>限流策略</strong>：</p><ul><li>目前来说有两种类型的消息： <ul><li>类型 1：<strong>消息之间没有关联关系</strong>；</li><li>类型 2：<strong>一批消息之间有关联关系</strong>；</li></ul></li><li><strong>没有关联关系的消息的限流</strong>：根据当前消息配置的推消息比例，直接下发；</li><li><strong>一批有关联关系的消息的限流</strong>： <ul><li>例如送礼时的礼物连击的消息，这一批连击消息是有关联的。</li><li>产品的诉求不允许某些用户只看到部分消息，也就是说对于这一批有关联的消息，一些用户能看到全部的消息，一些用户允许看到任何一个消息；</li><li>具体实现就是以用户的 uid 按 100 来取模，一批关联消息中会有一个相同的标识 ID，根据这个标识 ID 的值做随机，使得在限流范围内的 uid 用户能够看到；</li><li>eg. 一批关联消息中有个字段是标识 id，比如尾号是 35，如果消息的限流比例是 30%，那么能够接收的消息的范围是 35 到 (35 + 30 = 65) 之间，也就是说 uid 按 100 取模后命中了 [35, 65] 时，就会下发消息。直播间内用户比较多的时候用户 uid 的尾号的分布比较均匀。</li></ul></li></ul><h3 id="消息和上次下发数据比较" tabindex="-1"><a class="header-anchor" href="#消息和上次下发数据比较"><span>消息和上次下发数据比较</span></a></h3><p>我们有个消息是更新直播间的一些统计数据，例如观看人数、问答人数、连麦人数、当前场次钻石数、总钻石数等等。</p><p><strong>目前的现状是</strong>：</p><ul><li>这些统计信息都是由一个 IM 消息定时每 5 秒推送一次。把上一次推送的 IM 消息体给保存到缓存中，如果有信息变更，才会去整体推送；</li><li>目前的判断消息是否发生改变是通过 equals 方法比较对象是否相等。问题是，这其中有些统计数据的更新频率很快，例如钻石数，观看人数。但是有些数据的更新频率很慢，例如问答人数，连麦人数。也就是说有些数据其实很长时间并未变更，但是由于有些数据变更比较快，导致每次和上次下推的消息都是有变化的，这时那些没有变更的数据就被迫下推了；</li><li>这样的问题就是，被迫下推的那些并未改变的数据也添加到消息体了，导致消息体积变大；</li></ul><p><strong>解决方案：</strong></p><ul><li>针对改变的字段有选择的下发，没有发送改变的字段就不下发，客户端只更新下发的字段的值；</li></ul><blockquote><p>关于更新速度不同的统计数据，还有一种办法就是按照数据的更新速度来分组，然后拆分成多个 im 消息。</p></blockquote><h3 id="消息-gzip-压缩" tabindex="-1"><a class="header-anchor" href="#消息-gzip-压缩"><span>消息 gzip 压缩</span></a></h3><blockquote><p>为什么使用 gzip 压缩？</p><ul><li>首先市面上有很多压缩算法： <ul><li>gzip：gzip 是基于 <a href="https://en.wikipedia.org/wiki/DEFLATE" target="_blank" rel="noopener noreferrer">DEFLATE</a> 的算法，它是 <a href="https://en.wikipedia.org/wiki/LZ77_and_LZ78" target="_blank" rel="noopener noreferrer">LZ77</a> 和 <a href="https://en.wikipedia.org/wiki/Huffman_coding" target="_blank" rel="noopener noreferrer">Huffman</a> 编码 的结合；（哈夫曼是按照字符出现的频率使用二叉树来表示路径，主要思路就是出现频率高的字符的表示长度要短）</li></ul></li><li>使用那个压缩算法需要考虑<strong>压缩比、压缩速度、解压速度</strong></li><li><img src="`+u+'" alt="img" style="zoom:100%;"></li><li><strong>选择那种压缩算法考虑的条件</strong>： <ul><li>整体耗时优化提升最大，这也是整体优化方案的出发点。</li><li>保证最大兼容性，为了让接入构建平台的业务和平台减少改动成本，需要保持方案的兼容性（优先考虑最大兼容的策略，即兼容 gzip 的方案优先）。</li><li>保证部署目标机器环境的稳定和可靠，选择对部署机器侵入最小的方案，这样无需安装客户端或者库。</li><li>其实本问题更全面的评分角度有很多维度，比如对象存储的磁盘成本、带宽成本、任务耗时，甚至是机器成本，不过为了简化整体方案的选型，我们省略了一些计算，同时压缩比的对比选择上也选择了各自官方推荐的范围。</li></ul></li><li><strong>最终使用 gzip 的原因是</strong>： <ul><li>项目之前使用的就是 gzip 进行压缩；</li><li>我们的消息的大小并不是很大，这些压缩算法在小体积的数据时，压缩比、压缩速度、解压缩速度差距并不不明显，为了减少改动范围，继续使用 gzip；</li><li>另外，如果采用新压缩算法，有的压缩算法需要在机器上安装一些客户端，对现有机器有侵入性，所以没有考虑；</li></ul></li></ul></blockquote><img src="'+A+'" alt="image-20230815192110089" style="zoom:100%;"><p><strong>背景</strong>：目前线上数据压缩阈值设置为：4k， 经统计，大部分消息在1k左右，压缩策略基本不生效；</p><p><strong>优缺点</strong>：通过测试，使用 gzip 标准压缩策略，压缩比为 60%~70%，压缩优缺点：</p><ul><li>优点 <ul><li>减少系统带宽，节约带宽成本；</li><li>提升消息流畅度，提升用户体验，特别是网络较差用户；</li></ul></li><li>缺点 <ul><li>gzip 有一定的 cpu 损耗；</li></ul></li></ul><table><thead><tr><th style="text-align:left;">压缩策略</th><th style="text-align:left;">直播间人数</th><th style="text-align:left;">消息并发数</th><th style="text-align:left;">cpu利用率</th><th style="text-align:left;">流量</th></tr></thead><tbody><tr><td style="text-align:left;">gzip阈值4096</td><td style="text-align:left;">2000</td><td style="text-align:left;">2.3w</td><td style="text-align:left;">84%</td><td style="text-align:left;">98M/s</td></tr><tr><td style="text-align:left;">gzip阈值1024</td><td style="text-align:left;">2000</td><td style="text-align:left;">3.1w</td><td style="text-align:left;">87%</td><td style="text-align:left;">66M/s</td></tr></tbody></table><img src="'+c+'" alt="image-20230815175633682" style="zoom:100%;"><img src="'+m+'" alt="image-20230815175647348" style="zoom:100%;"><h2 id="客户端做了什么" tabindex="-1"><a class="header-anchor" href="#客户端做了什么"><span>客户端做了什么</span></a></h2><h3 id="配合服务端做了什么" tabindex="-1"><a class="header-anchor" href="#配合服务端做了什么"><span>配合服务端做了什么</span></a></h3><ul><li>分析有消息中哪些字段可以删除；</li><li>对于未做字段压缩的字段配合解析；</li></ul><p>对于一些删除后的消息，需要产品和运营的同学确认可以接受才可以实施；</p><h3 id="用户退后台断连-im" tabindex="-1"><a class="header-anchor" href="#用户退后台断连-im"><span>用户退后台断连 IM</span></a></h3><p><strong>目前现状是</strong>：</p><ul><li>客户端目前退后台后，并没有断开 IM 房间，也就是说在手机息屏或者在其他页面停留的时候还是接收来自服务端推送的消息。</li><li>因为用户退后台了，此时用户也看不到服务端推送过来的消息，所以我们压根就没有必要继续给用户推送消息；</li></ul><p><strong>解决方案是</strong>：</p><ul><li>用户退后台后，如果 15 秒内没有回到直播间，那么就会退出 IM 房间，此时就不会接收 IM 房间的消息；</li><li>用户退 IM 房间后，回到 IM 房间时，需要调用一些接口做恢复现场的动作。例如： <ul><li>调用接口获取当前房间最近 30 条弹幕；</li><li>调用接口查询直播间信息；</li><li>调用接口恢复连麦、问答、PK 等信息；</li></ul></li></ul>',88)),s[20]||(s[20]=i("blockquote",null,[i("p",null,"最近 30 条弹幕是如何实现的？"),i("ul",null,[i("li",{uid:""},"key 设计：list 结构，key 是 xxxx_")]),i("p",null,"在写弹幕的时候"),i("ul",null,[i("li",null,"使用 rpush 表示从右边一直插入数据，expire 设置过期时间；"),i("li",null,"使用 ltrim 至多保持 30 条数据。例如 ltrim -30 -1，表示从右边数，维持倒数第 1 个和倒数第 30 个数据项；")]),i("div",{class:"language-java line-numbers-mode","data-highlighter":"shiki","data-ext":"java",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"3")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"3")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"4")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"4")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"5")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"5")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lpush list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"6")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"(integer) "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"6")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lrange list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"6"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"5"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"3"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"4"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"4"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"3"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"5"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"2"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"6"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"1"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," ltrim list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}}," 2"),i("span",{style:{"--shiki-light":"#A0A1A7","--shiki-light-font-style":"italic","--shiki-dark":"#7F848E","--shiki-dark-font-style":"italic"}},"  // 保持最新的 3 条")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"OK"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},"redis"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}},">"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}}," lrange list "),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"0"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#56B6C2"}}," -"),i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1")]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"6"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"5"')]),l(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#986801","--shiki-dark":"#D19A66"}},"3"),i("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#E06C75"}},") "),i("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}},'"4"')])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])])],-1)),s[21]||(s[21]=e('<h2 id="下行限流策略上线灰度服务器效果分析" tabindex="-1"><a class="header-anchor" href="#下行限流策略上线灰度服务器效果分析"><span>下行限流策略上线灰度服务器效果分析</span></a></h2><p>为了消息下行限流策略的效果，整体 40 台长连接，最开始只上线 2 台看看限流效果。</p><p>观察维度如下：</p><ul><li>单个 uid 在某个大主播的房间的各个消息的限流消息和正常下发消息的占比；</li><li>某个大主播的房间的各个消息的整体限流情况；</li><li>限流机器和不限流机器的下行流量对比；</li></ul><br><p>根据分析结论：</p><ul><li>不限流机器平均每秒下行流量是 300Mb；</li><li>限流机器平均每秒下行流量是 180Mb；</li><li><strong>单台机器公网流量下降约 120 / 300 = 40%；</strong></li><li><strong>单台长连接服务器的 CPU 使用率上升 2%，但是对应整体运维成本降低 50% 来说是非常划算的；</strong></li></ul><p>限流机器流量：</p><img src="'+B+'" alt="image-20230814233858381" style="zoom:100%;"><p>未限流机器流量</p><img src="'+f+'" alt="image-20230814233919177" style="zoom:67%;"><h2 id="限流项目总结" tabindex="-1"><a class="header-anchor" href="#限流项目总结"><span>限流项目总结</span></a></h2><blockquote><p><strong>回顾目标——评估结果——分析原因——总结经验。</strong></p></blockquote><ol><li><strong>回顾目标</strong>：随着直播间 DAU 上涨，现有的 IM 的公网流量费用比较高，需要在不影响用户体验的情况下将运维成本降低 50%；</li><li><strong>评估结果</strong>：实际限流效果和预期基本一致； <ol><li>大主播开播情况下，预计每天可以降低大盘流量 50%；</li><li>大主播不开播的情况下，预计每天可以降低大盘流量 10%；</li></ol></li><li><strong>分析原因</strong>： <ol><li>在初期制定方案的时候，进行更详细的需求分析和规划。例如针对某个问题或者需求想出多个解决方案，然后评估各个方案的可行性；</li><li>xxx；</li></ol></li><li><strong>总结经验</strong>: <ol><li>作为该项目的服务端负责人，锻炼了自己制定项目计划、设置里程碑、分配任务以及监督进度和质量的能力；</li><li>需要和客户端沟通一些问题的解决方案，和产品、运营同学沟通各个技术方案带来的一些 UI 等变化的内容。提高了沟通和协作能力。提高了自己和别人沟通、分享想法和解释技术概念的能力；</li></ol></li></ol><br><p>过年的时候大流量的页面我没权限看了，吗的，现在只记得流量费一天一万。一个月光流量费花了30w。</p><img src="'+b+'" alt="image-20230815000610142" style="zoom:100%;">',17))])}const _=h(E,[["render",x]]),M=JSON.parse('{"path":"/test/%E9%A1%B9%E7%9B%AE-IM%E9%99%90%E6%B5%81-%E5%85%AC%E7%BD%91%E6%B5%81%E9%87%8F%E9%99%8D%E4%BD%8E.html","title":"项目-IM限流-公网流量降低","lang":"en-US","frontmatter":{"title":"项目-IM限流-公网流量降低","description":"背景和期望目标 随着直播间 DAU 上涨，现有的 IM 的公网流量费用高昂，公司运维成本明显提升。 目的是期望基于现有的 IM 功能，在不影响用户体验的前提下降低 IM 的公网流量费用。 这次 IM 限流是服务端主导的优化，也就是我，产品和客户端配合服务端完成这个需求。 问题分析过程 定位那些消息可以进行限流 主要是通过日志分析出各个业务消息的下发情况...","head":[["meta",{"property":"og:url","content":"https://blog.guosgbin.cn/test/%E9%A1%B9%E7%9B%AE-IM%E9%99%90%E6%B5%81-%E5%85%AC%E7%BD%91%E6%B5%81%E9%87%8F%E9%99%8D%E4%BD%8E.html"}],["meta",{"property":"og:title","content":"项目-IM限流-公网流量降低"}],["meta",{"property":"og:description","content":"背景和期望目标 随着直播间 DAU 上涨，现有的 IM 的公网流量费用高昂，公司运维成本明显提升。 目的是期望基于现有的 IM 功能，在不影响用户体验的前提下降低 IM 的公网流量费用。 这次 IM 限流是服务端主导的优化，也就是我，产品和客户端配合服务端完成这个需求。 问题分析过程 定位那些消息可以进行限流 主要是通过日志分析出各个业务消息的下发情况..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-21T15:01:57.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-21T15:01:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"项目-IM限流-公网流量降低\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-21T15:01:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"超威蓝猫 Dylan Kwok\\",\\"url\\":\\"\\",\\"email\\":\\"guosgbin@163.com\\"}]}"]]},"git":{"createdTime":1745247717000,"updatedTime":1745247717000,"contributors":[{"name":"Dylan Kwok","username":"","email":"guosgbin@163.com","commits":1}]},"readingTime":{"minutes":19.93,"words":5980},"filePathRelative":"test/项目-IM限流-公网流量降低.md","localizedDate":"April 21, 2025","autoDesc":true}');export{_ as comp,M as data};
